diff a/src/test/java/com/amazon/opendistroforelasticsearch/security/test/AbstractSecurityUnitTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/test/AbstractSecurityUnitTest.java	(rejected hunks)
@@ -81,5 +80,4 @@ public abstract class AbstractSecurityUnitTest {
 		System.out.println("Open SSL version: " + OpenSsl.versionString());
-		withRemoteCluster = Boolean.parseBoolean(System.getenv("OPENDISTRO_SECURITY_TEST_WITH_REMOTE_CLUSTER"));
+		withRemoteCluster = Boolean.parseBoolean(System.getenv("TESTARG_unittests_with_remote_cluster"));
 		System.out.println("With remote cluster: " + withRemoteCluster);
-	    //System.setProperty("security.display_lic_none","true");
 	}
@@ -192,9 +191,11 @@ public abstract class AbstractSecurityUnitTest {
             
-            Assert.assertTrue(tc.get(new GetRequest("opendistro_security", "security", "config")).actionGet().isExists());
-            Assert.assertTrue(tc.get(new GetRequest("opendistro_security","security","internalusers")).actionGet().isExists());
-            Assert.assertTrue(tc.get(new GetRequest("opendistro_security","security","roles")).actionGet().isExists());
-            Assert.assertTrue(tc.get(new GetRequest("opendistro_security","security","rolesmapping")).actionGet().isExists());
-            Assert.assertTrue(tc.get(new GetRequest("opendistro_security","security","actiongroups")).actionGet().isExists());
-            Assert.assertFalse(tc.get(new GetRequest("opendistro_security","security","rolesmapping_xcvdnghtu165759i99465")).actionGet().isExists());
-            Assert.assertTrue(tc.get(new GetRequest("opendistro_security","security","config")).actionGet().isExists());
+            String type=securityconfig.getType();
+
+            Assert.assertTrue(tc.get(new GetRequest("opendistro_security", type, "config")).actionGet().isExists());
+            Assert.assertTrue(tc.get(new GetRequest("opendistro_security",type,"internalusers")).actionGet().isExists());
+            Assert.assertTrue(tc.get(new GetRequest("opendistro_security",type,"roles")).actionGet().isExists());
+            Assert.assertTrue(tc.get(new GetRequest("opendistro_security",type,"rolesmapping")).actionGet().isExists());
+            Assert.assertTrue(tc.get(new GetRequest("opendistro_security",type,"actiongroups")).actionGet().isExists());
+            Assert.assertFalse(tc.get(new GetRequest("opendistro_security",type,"rolesmapping_xcvdnghtu165759i99465")).actionGet().isExists());
+            Assert.assertTrue(tc.get(new GetRequest("opendistro_security",type,"config")).actionGet().isExists());
         }
@@ -222,2 +223,3 @@ public abstract class AbstractSecurityUnitTest {
                     builder.putList("opendistro_security.authcz.admin_dn", "CN=kirk,OU=client,O=client,l=tEst, C=De");
+                    builder.put(ConfigConstants.OPENDISTRO_SECURITY_BACKGROUND_INIT_IF_SECURITYINDEX_NOT_EXIST, false);
                 //.put(other==null?Settings.EMPTY:other);
@@ -266,22 +268,4 @@ public abstract class AbstractSecurityUnitTest {
     
-    protected static ListAppender appender;
-
-    @ClassRule
-    public static LoggerContextRule init = new LoggerContextRule("log4j2-test.properties");
-
-    @BeforeClass
-    public static void setupLogging() {
-        try {
-            appender = init.getListAppender("list");
-        } catch (Throwable e) {
-            //ignore
-        }
-    }
-
-    @Before
-    public void clearAppender() {
-        
-        if(appender != null) {
-            appender.clear();
-        }
+    protected String getType() {
+        return "_doc";
     }
